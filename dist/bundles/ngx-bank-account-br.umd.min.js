!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@angular/common"),require("@angular/forms"),require("@angular/core"),require("moment-mini")):"function"==typeof define&&define.amd?define("ngx-bank-account-br",["exports","@angular/common","@angular/forms","@angular/core","moment-mini"],r):r(e["ngx-bank-account-br"]={},e.ng.common,e.ng.forms,e.ng.core,e.moment_)}(this,function(e,r,t,n,a){"use strict";function o(n,a){var o,i,c,e,d={label:0,sent:function(){if(1&c[0])throw c[1];return c[1]},trys:[],ops:[]};return e={next:r(0),"throw":r(1),"return":r(2)},"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function r(r){return function(e){return function t(e){if(o)throw new TypeError("Generator is already executing.");for(;d;)try{if(o=1,i&&(c=2&e[0]?i["return"]:e[0]?i["throw"]||((c=i["return"])&&c.call(i),0):i.next)&&!(c=c.call(i,e[1])).done)return c;switch(i=0,c&&(e=[2&e[0],c.value]),e[0]){case 0:case 1:c=e;break;case 4:return d.label++,{value:e[1],done:!1};case 5:d.label++,i=e[1],e=[0];continue;case 7:e=d.ops.pop(),d.trys.pop();continue;default:if(!(c=0<(c=d.trys).length&&c[c.length-1])&&(6===e[0]||2===e[0])){d=0;continue}if(3===e[0]&&(!c||e[1]>c[0]&&e[1]<c[3])){d.label=e[1];break}if(6===e[0]&&d.label<c[1]){d.label=c[1],c=e;break}if(c&&d.label<c[2]){d.label=c[2],d.ops.push(e);break}c[2]&&d.ops.pop(),d.trys.pop();continue}e=a.call(n,d)}catch(r){e=[6,r],i=0}finally{o=c=0}if(5&e[0])throw e[1];return{value:e[0]?e[1]:void 0,done:!0}}([r,e])}}}var i=a,c=function(){function e(e){this.changeDetector=e}return e.prototype.ngOnInit=function(){this.initExpirationOptions()},e.prototype.getPhoneMask=function(e){return e&&14<e.length?"(99) 99999-9999":"(99) 9999-9999"},e.prototype.getDocumentMask=function(e){return"CNPJ"==e?"99.999.999/9999-99":"999.999.999-99"},e.prototype.initExpirationOptions=function(){return function e(r,i,c,d){return new(c||(c=Promise))(function(e,t){function n(e){try{o(d.next(e))}catch(r){t(r)}}function a(e){try{o(d["throw"](e))}catch(r){t(r)}}function o(r){r.done?e(r.value):new c(function(e){e(r.value)}).then(n,a)}o((d=d.apply(r,i||[])).next())})}(this,void 0,void 0,function(){var r,t,n;return o(this,function(e){for(r={months:[],years:[]},t=1;t<=12;t++)r.months.push(this.pad(t));for(n=0;n<=30;n++)r.years.push(i().add(n,"years").format("YYYY"));return this.expirationMonths=r.months,this.expirationYears=r.years,this.changeDetector.detectChanges(),[2]})})},e.prototype.pad=function(e){return e<10?"0"+e.toString():e.toString()},e.decorators=[{type:n.Component,args:[{selector:"ngx-credit-card",template:'<article credit-card max-width-container *ngIf="card">\n    <article card-back>\n        <section card-stripe></section>\n    </article>\n    <article card-front>\n        <form #cardForm="ngForm" *ngIf="!showBack">\n            <label>\n                Número do cartão\n            </label>\n            <input required type="text" autocomplete="cc-number" card-number name="cardNumber" mask="9999 9999 9999 9999"\n                [(ngModel)]="card.number" placeholder="1234 5678 9101 1112" length="16">\n            <section cardholder-container>\n                <label>\n                    Nome do titular\n                </label>\n                <input required type="text" autocomplete="cc-name" card-holder name="holderName" [(ngModel)]="card.holder.name"\n                    placeholder="Ada Lovelace" />\n            </section>\n\n            <section exp-container>\n                <label>\n                    Validade\n                </label>\n                <select required card-month name="expMonth" [(ngModel)]="card.expirationMonth" autocomplete="cc-exp-month">\n                    <option *ngFor="let month of expirationMonths; let index = index;" [value]="month" [selected]="index == 0">\n                        {{month}}\n                    </option>\n                </select>\n                <select required card-year name="expYear" [(ngModel)]="card.expirationYear" autocomplete="cc-exp-year">\n                    <option *ngFor="let year of expirationYears; let index = index;" [value]="year" [selected]="index == 0">\n                        {{year}}\n                    </option>\n                </select>\n            </section>\n\n            <section cvc-container>\n                <label for="card-cvc">\n                    CVV:\n                </label>\n                <input required card-cvc autocomplete="cc-csc" placeholder="XXXX" name="cardCvv" [(ngModel)]="card.cvv"\n                    type="text" min-length="3" max-length="4">\n                <p>\n                    <span>\n                    </span>\n                </p>\n            </section>\n        </form>\n    </article>\n</article>',changeDetection:n.ChangeDetectionStrategy.Default,styles:["[credit-card]{padding-bottom:25px;max-width:400px;margin:auto}[credit-card] *{transition-property:all;transition-duration:.3s}[credit-card] [card-cvc]{width:60px;margin-bottom:0}[credit-card] [card-back],[credit-card] [card-front]{background:#1e88e5;background:linear-gradient(to bottom,#1e88e5 0,#1ee5bd 100%);min-width:320px;max-width:400px;min-height:230px;border-radius:6px;padding:20px 30px 0;font-size:10px;letter-spacing:1px;font-weight:300;color:#fff;box-shadow:1px 1px 2px rgba(0,0,0,.2)}[credit-card] [card-front]{z-index:999;margin-top:-250px;margin-left:-20px}[credit-card] [card-back]{z-index:-2;padding:20px 0 0;margin-right:-20px}[credit-card] [card-extra-info] [field] select,[credit-card] [card-extra-info] [field][full-width],[credit-card] [card-holder],[credit-card] [card-number],[credit-card] [cvc-container] label{width:100%}[credit-card] [card-stripe]{width:100%;height:55px;background-color:rgba(0,0,0,.5);right:0}[credit-card] [card-token]{display:none}[credit-card] [card-month]{width:37%}[credit-card] [card-year]{width:53%;float:right}[credit-card] [cardholder-container]{width:60%;display:inline-block}[credit-card] [cvc-container]{box-sizing:border-box;text-align:right}[credit-card] [card-button]{border:2px solid #fff;display:block;padding:10px;color:#fff;float:right;border-radius:30px;background-color:#1e88e5}[credit-card] [next-button]{margin-top:20px}[credit-card] [save-button]{border-radius:50%;font-weight:700;margin-top:-10px}[credit-card] [card-brand]{float:left;margin-left:6px}[credit-card] [card-brand-select]{width:208px}[credit-card] [card-brand-pic]{opacity:0;width:42px;height:20px}[credit-card] [card-brand-pic][visible=true]{opacity:1}[credit-card] [cvc-container] p{font-size:8px;text-transform:uppercase;letter-spacing:.5px;color:#fff;font-weight:700}[credit-card] [cvc-container] p span{max-width:80px;display:inline-block;padding-top:5px}[credit-card] [exp-container]{margin-left:10px;width:32%;display:inline-block}[credit-card] input,[credit-card] select{border:none;outline:0;background-color:#fff;font-weight:700;height:30px;line-height:30px;padding:0 10px;margin:0 0 8px;color:#1e88e5;font-size:10px;box-sizing:border-box;border-radius:4px;letter-spacing:.7px}[credit-card] select{padding:0;text-align:center}[credit-card] select option{background-color:#fff;font-weight:700;color:#444}[credit-card] input::-webkit-input-placeholder{color:#79f0d8}[credit-card] input::-moz-placeholder{color:#79f0d8}[credit-card] input:-ms-input-placeholder{color:#79f0d8}[credit-card] input:-moz-placeholder{color:#79f0d8}[credit-card] label{display:block;margin:0 auto 7px;color:#fff;font-size:10px;font-weight:700;text-transform:uppercase}[credit-card] [card-extra-info] input{margin-bottom:0}[credit-card] [card-extra-info] [field]{display:inline-block;margin-right:1.5%;margin-left:1.5%;width:46%;height:60px}[credit-card] [card-extra-info] [field][email] input,[credit-card] [card-extra-info] [field][email] label{display:inline-block}[credit-card] [card-extra-info] [field][email] label{width:20%}[credit-card] [card-extra-info] [field][email] input{width:75%}"]}]}],e.ctorParameters=function(){return[{type:n.ChangeDetectorRef}]},e.propDecorators={card:[{type:n.Input,args:["card"]}],form:[{type:n.ViewChild,args:["cardForm"]}]},e}(),d=[c],l=function(){function e(){}return e.decorators=[{type:n.NgModule,args:[{imports:[r.CommonModule,t.FormsModule],declarations:[d],exports:[d]}]}],e}();e.Component=d,e.NgxCreditCardModule=l,e.ɵa=c,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-bank-account-br.umd.min.js.map